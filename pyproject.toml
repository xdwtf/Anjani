[tool.poetry]
name = "anjani"
version = "2.8.0a3"
description = "Telegram group management bot"
license = "GPL-3.0-or-later"
authors = [
    "Gaung Ramadhan <hi@mrmiss.my.id>",
    "Adek Maulana <adekzmaulana@gmail.com>"
]
readme = "README.md"
homepage = "https://github.com/userbotindo/anjani#readme"
repository = "https://github.com/userbotindo/anjani"
documentation = "https://userbotindo.com/docs/home"
keywords = ["chatbot", "bot", "python", "telegram-bot", "pyrogram"]
classifiers = [
    "Environment :: Console",
    "Framework :: AsyncIO",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Communications",
    "Topic :: Communications :: Chat",
]

[tool.poetry.scripts]
anjani = "anjani.main:start"

[tool.poetry.dependencies]
python = ">=3.9, <=3.11"
aiohttp = "^3.8.3"
aiopath = [
    {version = "^0.5.12", python = "<3.10"},
    {version = "^0.6.11", python = ">=3.10"},
]
aiorun = "^2022.11.1"
certifi = {version = "^2022.12.7", platform = "windows"}
colorlog = "^6.7.0"
meval = "^2.5"
pymongo = "^4.3.3"
pyrofork = { git = "https://github.com/Mayuri-Chan/pyrofork.git", branch = "master"}
python-dotenv = "^0.21.0"
PyYAML = "^6.0"
requests = "^2.28.2"
scikit-learn = {version = "1.2.0", optional = true}
TgCrypto = "^1.2.5"
typing-extensions = "^4.4.0"
uvloop = {version = "^0.17.0", optional = true, platform = "linux"}

[tool.poetry.extras]
all = ["scikit-learn", "uvloop"]
ml = ["scikit-learn"]
uvloop = ["uvloop"]

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
isort = "^5.10.1"
pre-commit = "^2.20.0"
pylint = "^2.15.5"
flake8 = "^5.0.4"
pytest = "^7.2.0"
pytest-asyncio = "^0.20.2"

#
# Black config
#
[tool.black]
line-length = 100
target-version = ["py38"]

#
# Isort Config
#
[tool.isort]
profile = "black"
known_third_party = [
    "aiohttp",
    "aiopath",
    "aiorun",
    "colorlog",
    "dotenv",
    "pymongo",
    "pyrogram",
    "scikit-learn",
    "yaml"
]

#
# Pylint Config
#
[tool.pylint]
    ignore = "anjani/util/db"

    [tool.pylint.messages_control]
    disable = [
        "attribute-defined-outside-init",
        "too-few-public-methods",
        "missing-class-docstring",
        "logging-fstring-interpolation",
        "missing-function-docstring"
    ]

    [tool.pylint.reports]
    output-format = "colorized"

    [tool.pylint.logging]
    logging-format-style = "new"

    [tool.pylint.format]
    max-line-length = 100

    [tool.pylint.design]
    max-args = 15

# Semantic Release Config
[tool.semantic_release]
version_variable = "anjani/__init__.py:__version__"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
